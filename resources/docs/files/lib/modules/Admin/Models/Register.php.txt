<?php

namespace Register\Models;
use Core\Models\Db\Table\Users;
use Core\Models\Validation\Email;
use Core\Models\Validation\Password;
use Register\View\ForgetPw;
use Register\View\Registration;
use Zend_Validate;
use Zend_Validate_Alpha;
use Zend_Validate_StringLength;

/**
 * Class Register
 * @package Register\Models
 */
class Register {

    /**
     * @var array
     */
    private $errors = [];
    /**
     * @var null
     */
    protected $_users = null;

    /**
     * @param $action
     */
    public function __construct($action) {
        if (method_exists($this, $action)) {
            call_user_func([$this, $action]);
        }
    }

    /**
     *
     */
    private function sendRegistration() {
        $this->_users = new Users();
        if (!$this->validateForm()) {
            $this->renderErrors();
        } else {
            if ($this->_users->add($_POST)) {
                $view = new Registration();
                $view->assign('success', true);
                $view->render();
            }
        }
    }

    /**
     *
     */
    private function forgetPw() {
        if (!isset($_POST['resetPw'])) {
            $view = new ForgetPw();
            $view->render();
        } else {
            
        }
    }

    /**
     *
     */
    private function renderErrors() {
        $view = new Registration();
        $error_messages = [];
        if (!empty($this->errors)) {
            foreach ($this->errors AS $error => $message) {
                $view->assign("input_error_" . $error, "error");
                $error_messages[] = $message;
            }
            $view->assign("error_messages", $error_messages);
        }
        $view->render();
    }

    /**
     * @return bool
     */
    private function validateForm() {
        $validateAlpha = new Zend_Validate_Alpha();
        $validateMail = new Email();
        $validateUsername = new Zend_Validate();
        $validatePassword = new Password();

        $validateUsername->addValidator(new Zend_Validate_StringLength(["max" => 20, "min" => 2]), true)->addValidator(new \Zend_Validate_Alnum());

        if (!$validateUsername->isValid($_POST['username']))
            $this->errors["username"] = "Your username is invalid!";
        if (!$validateMail->isValid($_POST['email']))
            $this->errors["email"] = implode(',', $validateMail->getMessages());
        if (!$validatePassword->passwordValid($_POST['password'], $_POST['password-repeat'])) {
            $this->errors["password"] = implode(',', $validatePassword->getMessages());
            $this->errors["password_repeat"] = "";
        }
        if (!isset($_POST['sex']) || ($_POST['sex'] != 'm' && $_POST['sex'] != "f"))
            $this->errors["sex"] = "Please select a gender";
        if (!$validateAlpha->isValid($_POST['firstname']))
            $this->errors["firstname"] = "The Firstname is invalid";
        if (!$validateAlpha->isValid($_POST['lastname']))
            $this->errors["lastname"] = "The Lastname is invalid";
        return empty($this->errors);
    }

}



