<?php

namespace Core\Models\Validation;

use Core\Models\Db\Table\Users;
use Register\Models\Login;

/**
 * Class Username
 * @package Core\Models\Validation
 */
class Username extends \Zend_Validate_Alnum {

    /**
     *
     */
    const USED = 'used';
    /**
     *
     */
    const LENGTH = 'length';
    /**
     *
     */
    const INVALID = 'invalid';

    /**
     * @var array
     */
    protected $_messageTemplates = [
        self::USED => "This username is already in use",
        self::LENGTH => "The username-length should be between 2 and 20 characters!",
        self::INVALID => "The username contains not allowed characters!"
    ];

    /**
     * @param string $value
     * @return bool
     */
    public function isValid($value) {
        $this->_setValue($value);
        if (empty($value) || strlen($value) < 2 || strlen($value) > 20) {
            $this->_error(self::LENGTH);
            return false;
        }
        $users = new Users();
        $user = $users->search("username", $value);
        if (($user !== NULL && !Login::loggedIn()) ||
            (Login::loggedIn() && $user->userid !== $_SESSION['user']->userid)) {
            $this->_error(self::USED);
            return false;
        }
        $status = preg_match('/^[A-Za-z0-9_.-]*$/', $value);
        if (false === $status || !$status) {
            $this->_error(self::INVALID);
            return false;
        }
        return true;
    }

}

